{"ast":null,"code":"var _jsxFileName = \"/Users/dylan/Documents/A level Folder/Revision-Assistant-AI /frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // Store user input and API results\n  const [text, setText] = useState(\"\");\n  const [summary, setSummary] = useState(\"\");\n  const [wordCount, setWordCount] = useState(0);\n\n  // Send text to backend and get summary\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!text) return; // Ignore empty input\n\n    try {\n      // POST request to FastAPI backend\n      const response = await fetch(\"http://127.0.0.1:8000/analyze-text\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          text\n        })\n      });\n      const data = await response.json();\n\n      // Update frontend state with backend response\n      setSummary(data.summary);\n      setWordCount(data.word_count);\n    } catch (error) {\n      console.error(\"Error connecting to backend:\", error);\n      setSummary(\"Failed to get summary. Is the backend running?\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Revision Assistant\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: text,\n        onChange: e => setText(e.target.value),\n        placeholder: \"Paste your text here...\",\n        rows: 8,\n        cols: 60\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Summarize\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), summary && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"results\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Summary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: summary\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Word count:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 14\n        }, this), \" \", wordCount]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"K7H6RFCs5lWuapuEFHT+le9G9Yk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","text","setText","summary","setSummary","wordCount","setWordCount","handleSubmit","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","data","json","word_count","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","value","onChange","target","placeholder","rows","cols","type","_c","$RefreshReg$"],"sources":["/Users/dylan/Documents/A level Folder/Revision-Assistant-AI /frontend/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"./App.css\";\n\nfunction App() {\n  // Store user input and API results\n  const [text, setText] = useState(\"\");\n  const [summary, setSummary] = useState(\"\");\n  const [wordCount, setWordCount] = useState(0);\n\n  // Send text to backend and get summary\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (!text) return; // Ignore empty input\n\n    try {\n      // POST request to FastAPI backend\n      const response = await fetch(\"http://127.0.0.1:8000/analyze-text\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ text }),\n      });\n\n      const data = await response.json();\n\n      // Update frontend state with backend response\n      setSummary(data.summary);\n      setWordCount(data.word_count);\n    } catch (error) {\n      console.error(\"Error connecting to backend:\", error);\n      setSummary(\"Failed to get summary. Is the backend running?\");\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Revision Assistant</h1>\n      <form onSubmit={handleSubmit}>\n        {/* User text input */}\n        <textarea\n          value={text}\n          onChange={(e) => setText(e.target.value)}\n          placeholder=\"Paste your text here...\"\n          rows={8}\n          cols={60}\n        />\n        <br />\n        <button type=\"submit\">Summarize</button>\n      </form>\n\n      {/* Display results from backend */}\n      {summary && (\n        <div className=\"results\">\n          <h2>Summary</h2>\n          <p>{summary}</p>\n          <p><strong>Word count:</strong> {wordCount}</p>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}